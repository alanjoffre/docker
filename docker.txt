https://docs.docker.com/get-docker/

**Introdução a CLI Docker

sintaxe
docker <commando> <sub-comando> <opcoes>

comando para verificar a versão do docker 
docker version

comando para verificar as informações do docker 
docker info

comando para listar gerenciamento de containers
docker container --help

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  inspect     Display detailed information on one or more containers
  kill        Kill one or more running containers
  logs        Fetch the logs of a container
  ls          List containers
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  prune       Remove all stopped containers
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  run         Run a command in a new container
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

comando para listar comandos docker
docker --help

Management Commands:
  builder     Manage builds
  buildx*     Docker Buildx (Docker Inc., v0.9.1)
  compose*    Docker Compose (Docker Inc., v2.13.0)
  config      Manage Docker configs
  container   Manage containers
  context     Manage contexts
  dev*        Docker Dev Environments (Docker Inc., v0.0.5)
  extension*  Manages Docker extensions (Docker Inc., v0.2.16)
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  sbom*       View the packaged-based Software Bill Of Materials (SBOM) for an image (Anchore Inc., 0.6.0)
  scan*       Docker Scan (Docker Inc., v0.22.0)
  secret      Manage Docker secrets
  service     Manage services
  stack       Manage Docker stacks
  swarm       Manage Swarm
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes
  
Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

comando para listar os containers
docker ps

comando para listar todos os containers (ligados/desligados)
docker ps -a

comando para listar containers
docker container ls

comando para listar container e id
docker container ls -a

comando para criar um container
docker container run --name web01 -p 80:80 nginx

Abrir o container pelo browser
127.0.0.1:80

listar comandos para parar/desligar e remover um container
docker container rm --help

Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]

Remove one or more containers

Options:
  -f, --force     Force the removal of a running container (uses SIGKILL)
  -l, --link      Remove the specified link
  -v, --volumes   Remove anonymous volumes associated with the container
  
docker container rm -f id_container
docker container rm -f 9b7383387fd1

comando listar redes
docker network ls

listar comandos de rede
docker volume --help

Manage networks

Commands:
  connect     Connect a container to a network
  create      Create a network
  disconnect  Disconnect a container from a network
  inspect     Display detailed information on one or more networks
  ls          List networks
  prune       Remove all unused networks
  rm          Remove one or more networks

listar comandos imagens
docker image --help

Usage:  docker image COMMAND
Manage images

Commands:
  build       Build an image from a Dockerfile
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Display detailed information on one or more images
  load        Load an image from a tar archive or STDIN
  ls          List images
  prune       Remove unused images
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rm          Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE

Segue a lista de comandos docker e sua utilidade:

docker attach  – Acessar dentro do container e trabalhar a partir dele.
docker build   – A partir de instruções de um arquivo Dockerfile eu possa criar uma imagem.
docker commit  – Cria uma imagem a partir de um container.
docker cp      – Copia arquivos ou diretórios do container para o host.
docker create  – Cria um novo container.
docker diff    – Exibe as alterações feitas no filesystem do container.
docker events  – Exibe os eventos do container em tempo real.
docker exec    – Executa uma instrução dentro do container que está rodando sem precisar atachar nele.
docker export  – Exporta um container para um arquivo .tar.
docker history – Exibe o histórico de comandos que foram executados dentro do container.
docker images  – Lista as imagens disponíveis no host.
docker import  – Importa uma imagem .tar para o host.
docker info    – Exibe as informações sobre o host.
docker inspect – Exibe r o json com todas as configurações do container.
docker kill    – Da Poweroff no container.
docker load    – Carrega a imagem de um arquivo .tar.
docker login   – Registra ou faz o login em um servidor de registry.
docker logout  – Faz o logout de um servidor de registry.
docker logs    – Exibe os logs de um container.
docker port    – Abre uma porta do host e do container.
docker network – Gerenciamento das redes do Docker.
docker node    – Gerenciamento dos nodes do Docker Swarm.
docker pause   – Pausa o container.
docker port    – Lista as portas mapeadas de um container.
docker ps      – Lista todos os containers.
docker pull    – Faz o pull de uma imagem a partir de um servidor de registry.
docker push    – Faz o push de uma imagem a partir de um servidor de registry.
docker rename  – Renomeia um container existente.
docker restart – Restarta um container que está rodando ou parado.
docker rm      – Remove um ou mais containeres.
docker rmi     – Remove uma ou mais imagens.
docker run     – Executa um comando em um novo container.
docker save    – Salva a imagem em um arquivo .tar.
docker search  – Procura por uma imagem no Docker Hub.
docker service – Gernciamento dos serviços do Docker.
docker start   – Inicia um container que esteja parado.
docker stats   – Exibe informações de uso de CPU, memória e rede.
docker stop    – Para um container que esteja rodando.
docker swarm   – Clusterização das aplicações em uma orquestração de várias containers, aplicações junto.
docker tag     – Coloca tag em uma imagem para o repositorio.
docker top     – Exibe os processos rodando em um container.
docker unpause – Inicia um container que está em pause.
docker update  – Atualiza a configuração de um ou mais containers.
docker version – Exibe as versões de API, Client e Server do host.
docker volume  – Gerenciamento dos volumes no Docker.
docker wait    – Aguarda o retorno da execução de um container para iniciar esse container.
Obs.: É possível ver todos os comandos que o Docker possui, tendo o docker instalado, basta digitar no terminal docker --help

**Gerenciando containers Docker

Sintaxe: docker container run <OPTIONN> <IMAGE:TAG>

Detached vs Foregroung
Quando inicializamos um container, primeiro devemos decidir se queremos executa-lo em segundo plano ou em primeiro plano(padrão)
Em primeiro plano, iniciamos o container e anexamos a console de processos, conhecido também como STDIN, STDOUT e STDERR

docker container run -p
-p publica a porta no host
(só publica a porta quando tenho que acessar a rede fora do container) 

docker container run --help

docker container run -p 8080:80 nginx

listar containers ligados
docker container ls

listar todos os containers 
docker container ls -al

comando para deixar em segundo plano o container
docker container run -d -p 8080:80 nginx

comando para parar container em execução
docker container ls
docker container stop id_container
docker container stop beea4a32f6d9

comando para inicializar container
docker container ls -a
docker container start id_container
docker container start b86.....

comando para remover e forçar parada do container
docker container rm -f id_container

comando para remover e forcar parada de mais de um container
docker container rm -f id_container id_container
docker container rm -f 68d b86

comando para listar apenas os id dos containers
docker container docker container ls -a -q

comando para listar todos os containers / forçar parada e remover ao mesmo tempo
docker container rm -f $(docker container ls -a -q)

comando para gerar apontar portas ramdomicas(aleatórias), para o host
docker container run -d -P nginx

docker container ls
listará a porta aleatório e acessivel pelo browser

**Gerenciando containers Docker

criar container e dar um nome
docker container run -d -p 80:80 --name webhost nginx
docker container run -d -p 81:80 --name webhost2 httpd

visualizar arquivo de log do container
docker container logs webhost

acompanhar a saida do log
docker container logs -f webhost

para sair, basta dar control+c

visualizar os processos que o container está utilizando
docker container top webhost

status dos containers
docker container stats

status de determinado container
docker container stats nome_container
docker container stats webhost

inspecionar um container
docker container inspect webhost

docker container inspect --help
Usage:  docker inspect [OPTIONS] NAME|ID [NAME|ID...]

Return low-level information on Docker objects

Options:
  -f, --format string   Format the output using the given Go template
  -s, --size            Display total file sizes if the type is container
      --type string     Return JSON for specified type

inspecionar determinado item do container
docker container inspect --format '{{ .NetworkSettings }}' nome_container
docker container inspect --format '{{ .NetworkSettings }}' webhost
docker container inspect --format '{{ .NetworkSettings.Networks }}' webhost
docker container inspect --format '{{ .Mounts }}' webhost
docker container inspect --format '{{ .Name }}' webhost
docker container inspect --format '{{ .Platform }}' webhost

**Conceitos de Redes Docker

Padrão: Bridge / None / Host

-----------------------------------------------------------------------------------------------

Rede Bridge
Rede padrão dos containers
Comunicação interna entre containers
Importante segmentar as redes
Bridge (NAT)
No docker terá uma faixa de IP diferente da sua rede (as vezes, será necessário alterar este range, para não conflitar com a rede do cliente)
Melhores práticas é criar uma nova rede virtual para cada app.
my_web = mysql, apache, php
my_api = flask, nodejs

comando para criar container na rede bridge
docker container run -d --name h_bridge1 nginx:alpine

comando para listar as redes
docker network ls

comando para inspecionar as redes
docker network inspect bridge

comando para executar console sh
docker container exec -it h_bridge1 sh

comando para mostras os dados da rede sh
#ifconfig

comando ping rede sh
#ping ip
#ping 172.17.0.3

comando para listar todas as regras de NAT
iptables -t nat -L

------------------------------------------------------------------------------------------------

Rede Host
Faz bridge
Não precisa publicar portas (-p ou -P)
Não consegue iniciar vários containers com a mesma porta
Necessário publicar em portas diferentes
Necessário executar em outra máquina
Não funciona em modo swarm

comando para inspecionar rede host
docker inspect host

comando para criar container, apontar o nome, apontar o tipo de rede (host) e o tipo de imagem
imagem nginx:alpine - possui o pacote ping
docker container run --name net_host1 -d --network host nginx:alpine
docker container run --name net_host2 -d --network host nginx:alpine
Como a porta 80 está em execução, um container vai desligar!

comando para verificar o tipo de rede
docker network ls
docker network inspect id_rede

comando para listar todos os containers: ligados/desligados
docker container ls -a

comando para listar apenas os containers ligados
docker container ls

comando para visualizar logs da rede
docker container logs -f id_rede
docker container logs id_rede

------------------------------------------------------------------------------------------------

Rede None
Não possui acesso externo e nem de outros containers
Não possui comunicação
Ficará isolado

comando para criar rede none
docker container run -d --name h_nome --network none nginx:alpine

comando para inspecionar rede None
docker inspect none
não possui ip...

**Gerenciando redes docker






















